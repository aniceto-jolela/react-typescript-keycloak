{"version":3,"sources":["App.tsx","keycloak.ts","index.tsx"],"names":["App","_useKeycloak","useKeycloak","keycloak","initialized","_useState","useState","_useState2","Object","slicedToArray","getName","setName","_useState3","_useState4","getEmail","setEmail","_useState5","_useState6","getFirstName","setFirstName","_useState7","_useState8","getLastName","setLastName","authenticated","loadUserProfile","then","info","username","email","firstName","lastName","console","log","react_default","a","createElement","Fragment","style","textAlign","onClick","logout","Keycloak","realm","url","clientId","ReactDOM","createRoot","document","getElementById","render","lib","initOptions","onLoad","authClient","onEvent","event","error","onTokens","tokens","StrictMode","src_App"],"mappings":"sLA+CeA,MA5Cf,WAAe,IAAAC,EACqBC,cAAbC,GAAFF,EAAXG,YAAqBH,EAARE,UAAQE,EACHC,mBAA6B,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAnDK,EAAOH,EAAA,GAACI,EAAOJ,EAAA,GAAAK,EACMN,mBAA6B,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAArDE,EAAQD,EAAA,GAACE,EAAQF,EAAA,GAAAG,EACYV,mBAA6B,IAAGW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAA7DE,EAAYD,EAAA,GAACE,EAAYF,EAAA,GAAAG,EACEd,mBAA6B,IAAGe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAA3DE,EAAWD,EAAA,GAACE,EAAWF,EAAA,GAkB9B,OAZIlB,EAASqB,cACXrB,EAASsB,kBAAkBC,KAAK,SAACC,GAC/BhB,EAAQgB,EAAKC,UACbb,EAASY,EAAKE,OACdV,EAAaQ,EAAKG,WAClBP,EAAYI,EAAKI,UACjBC,QAAQC,IAAIN,KAGhBK,QAAQC,IAAI,yBAIVC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,UAAU,WAAU,WAEhCL,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACC,UAAU,WACrBL,EAAAC,EAAAC,cAAA,oBAAYlB,EAAY,IAAGI,GAC3BY,EAAAC,EAAAC,cAAA,wBAAgB1B,GAChBwB,EAAAC,EAAAC,cAAA,qBAAatB,GACfoB,EAAAC,EAAAC,cAAA,UACEI,QAAS,WACPrC,EAASsC,WACT,aC3BKtC,EAFE,UAAIuC,GANE,CACrBC,MAAO,kBACPC,IAAK,uBACLC,SAAU,aCCCC,IAASC,WACpBC,SAASC,eAAe,SAWrBC,OACHhB,EAAAC,EAAAC,cAACe,EAAA,EAAqB,CACpBC,YAAa,CAAEC,OAAQ,kBACvBC,WAAYnD,EACZoD,QAZgB,SAACC,EAAgBC,GACnCzB,QAAQC,IAAI,kBAAmBuB,EAAOC,IAYpCC,SATgB,SAACC,GACnB3B,QAAQC,IAAI,mBAAoB0B,KAU9BzB,EAAAC,EAAAC,cAACF,EAAAC,EAAMyB,WAAU,KACf1B,EAAAC,EAAAC,cAACyB,EAAG","file":"static/js/main.b7cb701c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useKeycloak } from \"@react-keycloak/web\";\n\nfunction App() {\n  const { initialized, keycloak } = useKeycloak();\n  const [getName,setName] = useState<string | undefined>('')\n  const [getEmail,setEmail] = useState<string | undefined>('')\n  const [getFirstName,setFirstName] = useState<string | undefined>('')\n  const [getLastName,setLastName] = useState<string | undefined>('')\n\n  if (!initialized) {\n    <div>Loding...</div>;\n  }\n\n  if (keycloak.authenticated) {\n    keycloak.loadUserProfile().then((info) => {\n      setName(info.username)\n      setEmail(info.email)\n      setFirstName(info.firstName)\n      setLastName(info.lastName)\n      console.log(info);\n    });\n}else{\n  console.log(\"NÃ£o authenticated.\")\n}\n\n  return (\n    <>\n      <h1 style={{textAlign:'center'}}>Welcome</h1>\n\n      <div style={{textAlign:'center'}}>\n        <h4>Name : {getFirstName} {getLastName}</h4>\n        <h4>Username : {getName}</h4>\n        <h4>Email : {getEmail}</h4>\n      <button\n        onClick={() => {\n          keycloak.logout();\n        }}\n      >\n        Logout\n      </button>\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","import Keycloak from \"keycloak-js\";\n\nconst keycloakConfig = {\n  realm: \"ReactTypescript\",\n  url: \"http://0.0.0.0:8080/\",\n  clientId: \"react-ts\",\n};\n\nconst keycloak = new Keycloak(keycloakConfig);\n\nexport default keycloak;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { ReactKeycloakProvider } from \"@react-keycloak/web\";\nimport keycloak from \"./keycloak\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\n\nconst eventLogger = (event: unknown, error: unknown) => {\n  console.log(\"onKeycloakEvent\", event, error);\n};\n\nconst tokenLogger = (tokens: unknown) => {\n  console.log(\"onKeycloakTokens\", tokens);\n};\n\nroot.render(\n  <ReactKeycloakProvider\n    initOptions={{ onLoad: \"login-required\" }}\n    authClient={keycloak}\n    onEvent={eventLogger}\n    onTokens={tokenLogger}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ReactKeycloakProvider>\n);\n\n"],"sourceRoot":""}